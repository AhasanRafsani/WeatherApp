{"version":3,"file":"static/js/365.bfcc3d40.chunk.js","mappings":"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","sources":["component/CircularProgress.tsx","component/CountryDetails.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {Box,CircularProgress} from \"@mui/material\";\r\n\r\nconst Loading:React.FC = ()=>{\r\n\r\n    return (\r\n        <>\r\n          <Box sx={{ height:\"50px\",width:\"50px\",margin:\"10px auto\"}}>\r\n              <CircularProgress/>\r\n          </Box> \r\n        </>\r\n    )\r\n}\r\nexport default Loading;","import React, { useEffect, useState } from \"react\"\r\nimport Loading from \"./CircularProgress\"\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Paper,Box,Container,TableContainer,Table,TableBody,TableHead,TableRow,TableCell,Grid,Button,Avatar,Typography} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\n\r\nconst useStyle = makeStyles({\r\n    root:{\r\n        height:\"600px\",\r\n        width:\"600px\",\r\n        margin:\"20px auto\"\r\n    }\r\n})\r\n\r\ninterface InitCountryInfo{\r\n    capital:string[],\r\n    population:number,\r\n    latlng:number[],\r\n    flags:{\r\n        png:string\r\n    }\r\n\r\n}\r\n\r\ninterface InitWeatherInfo{\r\n    temperature:number,\r\n    weather_icons:string[]\r\n    wind_speed:number,\r\n    precip:number,\r\n\r\n}\r\n\r\nconst CountryDetails:React.FC = ()=>{\r\n    const {countryName} = useParams<{countryName?:string}>()\r\n  \r\n    const [countryInfo ,setCountryInfo] = useState<InitCountryInfo>()\r\n    const [countryLoading,setCountryLoading] = useState<boolean>(false);\r\n   \r\n    const [weatherInfo ,setWeatherInfo] = useState<InitWeatherInfo>()\r\n    const [ weatherLoading, setWeatherLoading ] =useState<boolean>(false)\r\n     \r\n    const getApi = async()=>{\r\n       try{\r\n        setCountryLoading(true)\r\n        const {data} = await axios.get(`https://restcountries.com/v3.1/name/${countryName}`);\r\n        setCountryInfo(data[0]);\r\n        setCountryLoading(false);\r\n        //console.log(data);\r\n       }\r\n       catch(err){\r\n               //setCountryLoading(false);\r\n               console.log(err)\r\n       }\r\n    }\r\n\r\n    const showWeatherDetails = async()=>{\r\n        try{\r\n            setWeatherLoading(true);\r\n            const {data} = await axios.get(`http://api.weatherstack.com/current?access_key=eda4107a70c1eef3d94adab5ac9a1c2b&query=${countryInfo?.capital[0]}`);\r\n            setWeatherInfo(data.current);\r\n            setWeatherLoading(false);\r\n            console.log(data);\r\n           }\r\n           catch(err){\r\n                   setWeatherLoading(false)\r\n                   console.log(err)\r\n           }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getApi();\r\n    },[])\r\n\r\n    const classes = useStyle();\r\n    return(\r\n        <div data-testid=\"details\">\r\n        <Container maxWidth=\"sm\">\r\n             <Typography align=\"center\" color=\"primary\" variant=\"h6\">{countryName}</Typography>\r\n         <Grid container direction=\"column\" spacing={2}>\r\n             { countryLoading ?  <Loading/> :\r\n            \r\n               <Paper component={Box} mt={4} >\r\n                  <Grid container item spacing={1}>\r\n                         <Grid item xs={12} sm={6} sx={{height:\"200px\"}} >\r\n                             \r\n                             <TableContainer>\r\n                                 <Table>\r\n                                        \r\n                                        <TableRow>\r\n                                            <TableCell>Capital</TableCell>\r\n                                            <TableCell>{countryInfo?.capital}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                             <TableCell>Population</TableCell>\r\n                                            <TableCell>{countryInfo?.population}</TableCell>\r\n                                       </TableRow> \r\n                                       <TableRow>\r\n                                             <TableCell>Latlng</TableCell>\r\n                                            <TableCell>{countryInfo?.latlng}</TableCell>\r\n                                       </TableRow>\r\n                                 </Table>\r\n                             </TableContainer>\r\n                         </Grid>\r\n\r\n                          <Grid item xs={12} sm={6} >\r\n                            <Avatar src={countryInfo?.flags.png} alt=\"Flag\" variant=\"square\" sx={{height:\"200px\",width:\"100%\"}}  />\r\n                         </Grid>\r\n\r\n                         <Grid item xs={12}>\r\n                            <Button fullWidth variant=\"outlined\" onClick={showWeatherDetails}>Show Weather Details</Button>\r\n                        </Grid>\r\n                   </Grid>\r\n                </Paper>\r\n            }  \r\n\r\n\r\n            { weatherLoading ? <Loading/> :\r\n\r\n                   weatherInfo  &&\r\n\r\n                <Paper component={Box} mt={2}>\r\n                   <Grid container item>\r\n                           <Grid item xs={12} sm={6}>\r\n                              <TableContainer>\r\n                                   <Table>\r\n                                     \r\n                                        <TableRow>\r\n                                            <TableCell>Temperature</TableCell>\r\n                                            <TableCell>{weatherInfo?.temperature}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                             <TableCell>Wind Speed</TableCell>\r\n                                             <TableCell>{weatherInfo?.wind_speed}</TableCell>\r\n                                       </TableRow> \r\n                                       <TableRow>\r\n                                             <TableCell>Precip</TableCell>\r\n                                             <TableCell>{weatherInfo?.precip}</TableCell>\r\n                                       </TableRow>\r\n                                 </Table>\r\n                              </TableContainer>\r\n                           </Grid>\r\n                           \r\n                            <Grid item xs={12} sm={6} >\r\n                               <Avatar src={weatherInfo?.weather_icons[0]} alt=\"Flag\" variant=\"square\" sx={{height:\"200px\",width:\"100%\"}} />\r\n                           </Grid>\r\n                   </Grid>\r\n                </Paper>\r\n                }\r\n              </Grid>\r\n          </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryDetails;"],"names":["Box","sx","height","width","margin","CircularProgress","useStyle","makeStyles","root","countryName","useParams","useState","countryInfo","setCountryInfo","countryLoading","setCountryLoading","weatherInfo","setWeatherInfo","weatherLoading","setWeatherLoading","getApi","axios","data","console","log","showWeatherDetails","capital","current","useEffect","Container","maxWidth","Typography","align","color","variant","Grid","container","direction","spacing","Paper","component","mt","item","xs","sm","TableContainer","Table","TableRow","TableCell","population","latlng","Avatar","src","flags","png","alt","Button","fullWidth","onClick","temperature","wind_speed","precip","weather_icons"],"sourceRoot":""}